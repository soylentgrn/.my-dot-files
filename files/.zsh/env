# Env vars
export PATH='/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin'

if [ $(uname -s) = 'Darwin' ]; then
  # VMware Fusion
  if [ -d "/Applications/VMware Fusion.app/Contents/Library" ]; then
    if ! `echo $PATH | grep -q "/Applications/VMware Fusion.app/Contents/Library"`;then
      export PATH="/Applications/VMware Fusion.app/Contents/Library":$PATH
    fi
  fi

  #ovf tool
  if [ -f "/Applications/VMware OVF Tool/ovftool" ]; then
    if ! `echo $PATH | grep -q "/Applications/VMware\ OVF\ Tool/ovftool"`;then
      export PATH="/Applications/VMware\ OVF\ Tool/ovftool":$PATH
    fi
  fi

  # GO
  if [ -f "/usr/local/bin/go" ]; then
    export GOPATH="$HOME/go"
    export PATH="$HOME/go/bin":$PATH
    if [ -d "${HOME}/work/go" ]; then
      export GOPATH=$GOPATH:"$HOME/work/go"
      export PATH="$HOME/work/bin":$PATH
    fi
  fi
else
  # GO
  if `command -v go >/dev/null 2>&1`; then
    export GOPATH="$HOME/go"
    export PATH="$HOME/go/bin":$PATH
    if [ -d "${HOME}/work" ]; then
      export GOPATH=$GOPATH:"$HOME/work"
      export PATH="$HOME/work/bin":$PATH
    fi
  fi
fi

if [ -d "$HOME/bin" ]; then
  export PATH="$HOME/bin:$PATH"
fi

# RVM
if [ -d $HOME/.rvm/bin ]; then
  export PATH="$HOME/.rvm/bin":$PATH
  [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"  # This loads RVM
fi

# Remove duplicate entries from path
if [ -n "$PATH" ]; then
  old_PATH=$PATH:; PATH=
  while [ -n "$old_PATH" ]; do
    x=${old_PATH%%:*}       # the first remaining entry
    case $PATH: in
      *:"$x":*) ;;         # already there
      *) PATH=$PATH:$x;;    # not there yet
    esac
    old_PATH=${old_PATH#*:}
  done
  PATH=${PATH#:}
  unset old_PATH x
fi

