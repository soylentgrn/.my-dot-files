
. ~/.zsh/prompt # prompt config
. ~/.zsh/options # zsh options
. ~/.zsh/completion # tab completion config
. ~/.zsh/aliases # shell aliases
. ~/.zsh/git # git aliases
. ~/.zsh/ruby # ruby env vars and version management

# Env vars
if [ $(uname -s) = 'Darwin' ]; then
  if [ -d "/Applications/VMware Fusion.app/Contents/Library" ]; then
    export PATH="$PATH:/Applications/VMware Fusion.app/Contents/Library"
  fi
  if [ -d "/Applications/VMware OVF Tool/ovftool" ]; then
    export PATH=$PATH:"/Applications/VMware OVF Tool/ovftool"
  fi
  if [ -d "$HOME/Documents/scripts/mac" ]; then
    export PATH=$PATH:$HOME/Documents/scripts/mac
  fi
else
  export PATH="$PATH:$HOME/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"
fi

# Git path for src builds
if [ -d "/usr/local/git/bin" ]; then
  export PATH=$PATH:/usr/local/git/bin
fi

# RVM
export PATH="$PATH:$HOME/.rvm/bin"
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"  # This loads RVM

# GO
if [ -d "/usr/local/go/bin" ]; then
  export PATH=$PATH:$(go env GOPATH)/bin
fi

# GPG
if [ -f ~/.gnupg/.gpg-agent-info ] && [ -n "$(pgrep gpg-agent)" ]; then
    source ~/.gnupg/.gpg-agent-info
    export GPG_AGENT_INFO
else
    eval $(gpg-agent --daemon --write-env-file ~/.gnupg/.gpg-agent-info)
fi

export PATH=$PATH:$HOME/bin

autoload up-line-or-beginning-search
autoload down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search
bindkey "^[[B" down-line-or-beginning-search
